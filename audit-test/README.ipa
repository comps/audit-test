IPA Server
----------

Note that this README is applicable only for RHEL OS.

Some of the tests in the audit-test suite require a specially configured
external authentication server - IPA server - for their correct functionality.

IPA is an integrated Identity and Authentication solution for Linux/UNIX
networked environments. A IPA server provides centralized authentication,
authorization and account information by storing data about user, groups,
hosts and other objects necessary to manage the security aspects of
a network of computers.

IPA server consists from Kerberos, LDAP and some other services and specific
management tools. The identity and authentication on the client machines
is provided by the pam_sss PAM module, a NSS module and the SSSD daemon.
See the online documentation for more information [1].

The IPA server must be a separate machine from TOE and NS. One IPA server
can be used for multiple TOEs. The IPA server cannot be installed in MLS
mode, so it's not possible to have it installed on the NS.

The server needs to be reachable via network from the TOE via a DNS or
`/etc/hosts' resolvable hostname. Note that also all TOE hostnames need
to be resolvable via DNS or `/etc/hosts' for correct functionality.
When using `/etc/hosts', make sure that all records are identical
on the IPA server and the TOE(s).

IPA server has no relation to the NS, i.e. they do not know about each other.

This README does not explain the client side of configuration done on each TOE.
See `docs/sssd.txt' for more information about that.


Installation and configuration
------------------------------

To install and setup the authentication server follow these steps:

1. Kickstart a separate machine (physical or virtual) in Base mode or as RHEL7
   minimal installation. This machine needs to be different from TOE and NS.

2. After the installation login to the machine as root and setup a yum
   repository to be able to install new packages.

3. If you are installing the IPA server on a RHEL7 minimal installation,
   also add an administrative `eal' user and set his password to the
   same password as for the eal/root users on the TOE machines.

    # useradd -m -c "EAL Test User" -G wheel eal
    # passwd eal <TOE root's password>

4. Install tools for extracting archives and make

    # yum -y install make bzip2 gzip

5. Clone the audit-test suite repository or extract the audit-test archive
   to the root's home directory. Move the contents of the repository to the
   test suite folder `/usr/local/eal4_testing' via `make dist' - see README.run.

6. Install Network Server (ns2), which is required for the manual enrollment
   to work:

    # cd /usr/local/eal4_testing/audit-test
    # yum -y install $(make depmissing)
    # make ns_install

7. Run the authentication server installation and configuration via the
auth-server Makefile target:

    # cd /usr/local/eal4_testing/audit-test/
    # make auth-server

Note that this might take a while to complete, depending on your installation.
The IPA server consists from a lot of additional packages.

The Makefile actually calls the `ipa-install.sh' script in `utils/auth-server'
subfolder. The script configures IPA with settings from ipa_env file located
also in the `utils/auth-server/' folder. Please note that this file is also
sourced by the related tests so it must be the same on the authentication
server as on the TOE. You should not need to change the default values.

You will need to note down the server's resolvable hostname which you will
need to add to the exports file on TOE for the IPA related tests to work.

During the first run of the command you should see no error messages and
after the installation you should get PASSED result at the end of the
verification phase.

Please note that you can run `verify' phase anytime to check if the
IPA configuration is intact via

    # cd /usr/local/eal4_testing/audit-test/
    # make auth-server-verify

8. Make sure ntpd works correctly, especially if you are on a private network.
Synchronized time is required for Kerberos to work correctly. You can check
the time synchronization via ntpdate tool querying pool.ntp.org for example:

    # ntpdate -q pool.ntp.org
    server 205.233.73.201, stratum 0, offset 0.000000, delay 0.00000
    server 108.61.56.35, stratum 0, offset 0.000000, delay 0.00000
    server 216.66.0.142, stratum 0, offset 0.000000, delay 0.00000
    server 107.170.242.27, stratum 0, offset 0.000000, delay 0.00000
    23 Aug 19:17:32 ntpdate[2270]: no server suitable for synchronization found

In the case above the pool is unreachable meaning that your private network
firewall is probably blocking UTP that is used for time synchronization.
You need to add a reachable NTP server in `/etc/ntp.conf' and restart ntpd:

    # vim /etc/ntp.conf
    # systemctl restart ntp

9. Note the resolvable hostname of the authentication server that needs to
be exported on TOE. You can check the hostname of your server by running the
command below. Please note that this hostname needs to be resolvable by your
DNS system or via `/etc/hosts'.

    # hostname

10. You can easily uninstall the authentication server including package removal
via the auth-server-uninstall Makefile target:

    # cd /usr/local/eal4_testing/audit-test/
    # make auth-server-uninstall


IPA Ports
---------

If you have your IPA server located in another network which is subject to packet
filtering, note that you need to open these ports for the IPA to work [2].


Default configuration
---------------------

The installation script adds three IPA users intended for testing. These users are
defined by the IPA_USER, IPA_STAFF and IPA_USER_EXPIRED variables in `ipa_env' file
located in the `/usr/local/eal4_testing/audit-test/utils/auth-server' directory.
All users are added with password set in the IPA_PASS variable. Users defined by
the variables IPA_USER and IPA_STAFF should be able to login to TOE(s) and the IPA
server. The IPA_USER_EXPIRED should ask for password change uppon login. Please do
not change the password for this user as he is used in tests which expect the
password expiration.

The IPA_USER user maps to the default SELinux user, usually user_u with
security level s0. This dependes on the SELinux configuration set on the
TOE. You can check the default SELinux users via:

    # semanage user -l

The IPA_STAFF user has a default SELinux mapping to the staff_u user with
s0-s0:c0.c1023 range.


Implementation details
----------------------

The testing with IPA server is built on the following assumptions:

1. IPA server's OS is installed only once.
2. IPA server is fully configured only once, after the first
   installation of underlying OS.
3. The tests do not alter the IPA server configuration - i.e. IPA server
   is reusable for unlimited number of test runs.
4. TOE is manually enrolled to the IPA server and properly setup
   via `make sssd-configure' run on each TOE, see docs/sssd.txt for details.

Below Makefile targets are available on the IPA server and can be called via `make'
command in the `/usr/local/eal4_testing/audit-test' directory.

 * auth-server - calls install, configure and verify targets below
 * auth-server-install
 * auth-server-configure
 * auth-server-verify
 * auth-server-uninstall

Last three mentioned Makefile targets on the IPA server actually call
`utils/auth-server/ipa_install' script. The script implements 4 commands:

 * install
Installs all required IPA server packages and runs `ipa-server-install' with
specific parameters according to the settings in the `ipa_env' file.

 * configure
Create users for testing and prepare all the required data needed for manual
enrollment of all TOEs.

 * verify
Verify that IPA server configuration looks intact.

 * uninstall
Completely removes IPA server configuration and the ipa* packages. This
is also useful for testing as it can cleanup of mis-configured IPA server.


Common issues
-------------

1. Time synchronization

The kerberos won't work correctly if the time is not synchronized between
the IPA and TOEs. Make sure you have correct time set on all machines.

2. Expired passwords

The IPA install should set password expire time to 20000 days via

    # kinit admin
    # ipa pwpolicy-mod --maxlife=20000 global_policy

In case you would still get expired passwords, just remove the problematic
users via

    # ipa user-del USER

And run again the `auth-server-configuration' make target

    # cd /usr/local/eal4_testing/audit-test/
    # make auth-server-configure

This should recreate the users. Note that you can safely ignore other
errors during the run.

3. Rebuild of the IPA server

As the last resort of solving issues you can try to rebuild the IPA server.
You can do this by running uninstall and install again.

    # cd /usr/local/eal4_testing/audit-test/
    # make auth-server-uninstall
    # make auth-server


Links
-----

[1] https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Linux_Domain_Identity_Authentication_and_Policy_Guide/index.html
[2] https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Linux_Domain_Identity_Authentication_and_Policy_Guide/prerequisites.html#prereq-ports

#---------------------------------------------------------------
# prevent shell-like incorrect vim syntax highlight of this file
# vim: syntax=off :
