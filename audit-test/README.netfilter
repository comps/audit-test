About netfilter tests
---------------------

The netfilter tests are located in the netfilter sub-directory of the
audit-test suite. They are aimed to test claims against network filtering
using iptables and ip6tables. The use of remote network test server running
the lblnet_tst_server is required for these tests.

The iptables and ip6tables tests have a large number of the tests that run
over the local loopback device to a locally running lblnet_tst_server
process. The rest of the tests are run over the primary Ethernet device
(identified by an environment variable) against the remote server running
the lblnet_tst_server process. The lblnet_tst_server on both systems is
launched from xinetd.

The lblnet_tst_server is configured on the TOE during the 'make netconfig'
procedure described in the README.run file. Refer to the README.netwk_svr
for instructions on how to setup lblnet_tst_server on the network test
server.


Network configuration
---------------------

For running the netfilter tests you need to have a working network connection
between the test system (TOE) and the remote network server (NS). This connection
does not need to be dedicated.

A working network configuration with examples using simple IPv4/IPv6 addresses
is shown on the picture below. Please note that the interfaces can be connected
directly via a cross-cable or connected to the same LAN via Ethernet switches.

Please be aware that some network cards may be renamed by udev from the
"traditional" eth* network interface name to em* or also some other.


         +----------------+                       +----------------+
         | TOE |          |     +~~~~~~~~~~~+     |           | NS |
         |-----+          |     |  network  |     |           +----|
         |           eth3 |>>---+    or     |+--<<| eth0           |
         |  IPv4 10.0.0.2 |     |cross-cable|     | IPv4 10.0.0.1  |
         |  IPv6  fd00::2 |     +-----------+     | IPv6 fd00::1   |
         |                |                       |                |
         +----------------+                       +----------------+


Please see section "Procedures for configuration" about details how to set
up the network configuration.

Important note:
IPv6 addresses must have global for the tests to work. Using other scopes
will result in unexpected test failures.


Testing strategy
----------------

The strategy of the testing is to provide a known and preferable empty
chain in the tables prior to the start of the testing. Then a test message is
run through the appropriate chain of the tables showing that it is not
blocking or filtering on the test message. The rule is applied with the
appropriate filter information and the test message is run through again.

The result is checked for the expected result of either the dropping,
acceptance, or rejection of the test message. Often the dropping of a message
is verified through the timeout of a listen for the message or the timeout
of a connect request. It is usually verified again via the action parameter
for the message type NETFILTER in the audit log which is rotated before
the start of each test. In the case of a chain policy drop rule the listen
or connect timeout must suffice. This is because the only way to audit a
dropped message is to insert a rule with a target of AUDIT_DROP, however
by inserting such a rule it would not verify that the drop is caused by the
policy change as opposed to the rule inserted to audit the drop.


Environmental variables
-----------------------

There are a number of environmental variables required in order to provide
the information needed to set the rules in iptables, ip6tables.
Some of these environmental variables are also required by the network
tests in the audit-test/network directory. These environmental variables
must be set manually prior to running the tests, see README.run.

Below is a list of the environmental variables required to run all the tests
as well as an explanation of what they are.

Variable            Description
--------            ------------------------------------------------------------
MODE                Usually 64 but could be 32 if the TOE is running a 32-bit OS

PPROFILE       	    "capp" if the TOE is configured in 'base' mode or "lspp" 
                    if the TOE is configured in 'mls' mode

PASSWD              The root/eal password for the TOE

LOCAL_DEV           Device for the TOE primary network, such as "eth3"

LOCAL_IPV4          IPv4 address for primary network on TOE

LOCAL_IPV6          IPv6 address for primary network on TOE

LBLNET_SVR_IPV4     IPv4 address for the primary network on the NS

LBLNET_SVR_IPV6     IPv6 address for the primary device on the NS


Example of all needed environment variables for TOE
---------------------------------------------------

Example of all environment variables for TOE according to the configuration
shown in the "Network configuration" section. Please note these are a superset
of all configuration environment variables you need to successfully run
the all tests in the suite. Also be aware you need to adjust correctly
according to your configuration:

export MODE=64
export PPROFILE=lspp
export PASSWD="redhat"
export LOCAL_DEV="eth3"
export LOCAL_IPV4="10.0.0.2"
export LOCAL_IPV6="fd00::2"
export LOCAL_SEC_DEV="eth4"
export LOCAL_SEC_MAC="78:2B:CB:4B:EB:BC"
export LOCAL_SEC_IPV4="10.0.1.2"
export LOCAL_SEC_IPV6="fd00:1::2"
export LBLNET_SVR_IPV4="10.0.0.1"
export LBLNET_SVR_IPV6="fd00::1"


ifcfg configuration
-------------------

This section lists the required ifcfg network configuration files on RHEL based
systems that are needed to configure the network interfaces on TOE and NS
according to the picture shown in section "Network configuration".

=== TOE network interfaces configuration ===

# cat /etc/sysconfig/network-scripts/ifcfg-eth3
DEVICE="eth3"
TYPE="Ethernet"
HWADDR="01:12:44:FE:A7:18"
BOOTPROTO="static"
IPADDR="10.0.0.2"
NETMASK="255.255.255.0"
IPV6INIT="yes"
IPV6ADDR="fd00::2"
IPV6_AUTOCONF="no"
ONBOOT="yes"

=== NS network interfaces configuration ===

# cat /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE="eth0"
TYPE="Ethernet"
HWADDR="0F:14:15:B8:A0:77"
BOOTPROTO="static"
IPADDR="10.0.0.1"
NETMASK="255.255.255.0"
IPV6INIT="yes"
IPV6ADDR=fd00::1
IPV6_AUTOCONF="no"
ONBOOT="yes"

For details on configuring the network interfaces via ifcfgs scripts
in general refer to
https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/sec-Using_the_Command_Line_Interface.html#sec-Configuring_a_Network_Interface_Using_ifcg_Files
and documentation in `/usr/share/doc/initscripts-*/sysconfig.txt'.

Please note that in the examples above, all interfaces are configured via static
network address assignment. You may use also DHCP for configuring your devices
but take into account that DHCP addresses aren't persistent and can change
depending on you DHCP server settings.

If DHCP addresses are used and are not persistent, the LBLNET and SECNET
variables must be updated each time an address on the NS changes, and
the LOCAL variables must be updated if an address on the TOE changes.
A change to either server will require re-running 'make netconfig'
on the TOE and re-running the NS setup procedure described in README.netwk_svr.

After configuring the interfaces you need to restart the NetworkManager daemon
for the changes to take effect.

# systemctl restart NetworkManager

After restarting the network on the TOE and NS, verify the configuration
by examining the results of 'ip a' on each system.
