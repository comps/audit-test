###############################################################################
# (c) Copyright Hewlett-Packard Development Company, L.P., 2007
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of version 2 the GNU General Public License as
#   published by the Free Software Foundation.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
###############################################################################

#################################
# 
# Policy for testing selinux policy utilities, modeled after
# some of the LTP selinux tests
#
# This version of the policy module defines the types/domains
# that the test uses but doesn't actually allow any access.
#
#################################

policy_module(policy_tools_test, 1.0)
gen_require(`
	role user_r, lspp_test_r;
	attribute lspp_test_domains, lspp_domains;
	type bin_t, lspp_harness_t;
')

## Type for test file.
type test_open_file_t;
files_type(test_open_file_t);

## Domain for process that can open the test file for reading and writing.
userdom_unpriv_user_template(test_open);

## For this flavor of the policy, don't actually allow anything.
#allow test_open_t test_open_file_t:file { getattr read };
# We want to see an audit record if access is granted
auditallow test_open_t test_open_file_t:file read;

## Domain for process that cannot open the test file for reading or writing.
userdom_unpriv_user_template(test_noopen);

#allow test_noopen_t test_open_file_t:file { getattr };

#  Policy needed to hook it into the test harness
role lspp_test_r types test_open_t;
allow test_open_t lspp_harness_t:fd use;
allow test_open_t lspp_harness_t:process sigchld;
allow test_open_t lspp_harness_t:fifo_file write;

role lspp_test_r types test_noopen_t;
allow test_noopen_t lspp_harness_t:fd use;
allow test_noopen_t lspp_harness_t:process sigchld;
allow test_noopen_t lspp_harness_t:fifo_file write;

seutil_run_newrole(test_open_t,lspp_test_r,{ ttynode ptynode })
seutil_run_newrole(test_noopen_t,lspp_test_r,{ ttynode ptynode })
term_use_all_terms(test_open_t)
term_use_all_terms(test_noopen_t)
allow unlabeled_t lspp_harness_t:process sigchld;

