###############################################################################
#   Copyright (c) 2011 Red Hat, Inc. All rights reserved.
#
#   This copyrighted material is made available to anyone wishing
#   to use, modify, copy, or redistribute it subject to the terms
#   and conditions of the GNU General Public License version 2.
#
#   This program is distributed in the hope that it will be
#   useful, but WITHOUT ANY WARRANTY; without even the implied
#   warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#   PURPOSE. See the GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public
#   License along with this program; if not, write to the Free
#   Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
#   Boston, MA 02110-1301, USA.
###############################################################################
#
# AUTHOR: Eduard Benes <ebenes@redhat.com>
#

run_test() {
    declare status x=$1
    shift

    # Force the audit log to rotate
    rotate_audit_logs || return 2

    # Run the test
    "./test_$x.bash" "$@"
    status=$?

    # Display the log items if it failed
    if [[ $status == 1 ]]; then
        echo
        echo augrok output
        echo -------------
        augrok type!=DAEMON_ROTATE
    fi

    return $status
}

# If PPROFILE isn't set, set it based on the policy we're running.
if [[ $PPROFILE != capp && $PPROFILE != lspp ]] ; then
	if sestatus | grep -q mls ; then
		export PPROFILE=lspp
	else
		export PPROFILE=capp
	fi
fi

# Run these tests in CAPP and LSPP
if [[ $PPROFILE == capp || $PPROFILE == lspp ]]; then
    # Positive tests for basic sanity
    + pci_passthrough sanity_attach_after_boot
    + pci_passthrough sanity_attach_on_boot
    + pci_passthrough sanity_detach_1
    + pci_passthrough sanity_detach_2

    # Negative tests on a single guest domain
    + pci_passthrough simple_double_attach
    + pci_passthrough simple_double_detach

    # Negative tests on two guest domain
    + pci_passthrough shared_attach_on_boot
    + pci_passthrough shared_attach_used
    + pci_passthrough shared_detach_used

    # USB PT attach tests
    + usb_passthrough sanity_attach_after_boot
    + usb_passthrough sanity_attach_on_boot

    # USB PT detach tests
    + usb_passthrough sanity_detach_1
    + usb_passthrough sanity_detach_2
fi

# Run these tests only in CAPP
if [[ $PPROFILE == capp ]]; then
    # PCI PT dynamic attach test
    + pci_passthrough dynamic_attach_on_boot

    # USB PT dynamic attach test
    + usb_passthrough dynamic_attach_on_boot
fi
