Running LTP syscalls and tcp_cmds for RHEL6.2 certification



get ltp git tree from git://ltp.git.sourceforge.net/gitroot/ltp/ltp
In your local git tree add/replace the following files from the audit-test suite
directory "ltp" to the designated locations as shown below.

cc_ospp.sh   -> ltp/testscripts/cc_ospp.sh
cc_commands  -> ltp/runtest/cc_commands
ssh03        -> ltp/testcases/network/tcp_cmds/ssh03
su01         -> ltp/testcases/commands/su/su01

create tarball of the ltp tree
cd to git path
tar -cvzf <tarball name> .


Unpack tarball on TOE
cd to chosen path (usr/local/eal4_testing/ltp)
tar -xvzf <tarball name>

#
#export TOP_SRCDIR so it points to where ltp tarball is unpacked
#for example (export TOP_SRCDIR=/usr/local/eal4_testing/ltp)

(building in same directory - simpliest?)

cd $TOP_SRCDIR
make autotools
./configure
make all
make install

(did not need to create nobody, bin, daemon already there)

You should set the boolean allow_execmem to "on" so that one of the sendfile tests
will pass

setsebool allow_execmem=on

--------
to run the syscalls:
cd /opt/ltp/testscripts
syscalls.sh

results of the syscall tests will be located in /opt/ltp/results
directory

to run the tcp_cmds required for the RHEL6.2 CC certification
cc_ospp.sh

In order to obtain a human readable log the command should include the
-l and -p otion for example "cc_ospp.sh -l result1 -p"
This will cause a result file named result1 to be created in
the /opt/ltp/testscripts/results directory


note, fork13 takes a long time to run.

As of Oct 06 2011 tests were all passing on RHEL6.2 beta in mls mode
(cc-eal4-config-rhel62-0.14-noarch.rpm)

These tests were built and run as root in the lspp_test_r role
on the mls intel based platform
