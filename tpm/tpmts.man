###############################################################################
# (c) Copyright Hewlett-Packard Development Company, L.P., 2008
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of version 2 the GNU General Public License as
#   published by the Free Software Foundation.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
###############################################################################

TPMTS.SH	TPM Test Suite Wrapper (HP)

NAME
	tpmsh.sh - TPM Test Suite wrapper from HP

SYNOPSIS
	tpmsh.sh -p <path-to-tcg-test-dir>

	tpmsh.sh [-co][-ct][-D][-id][-I][-m][-o][-t <n,n,n>][-v <version>]

DESCRIPTION

	This program is a wrapper for the trousers based TSS test suite.
	It provides flexibility for testing, and attempts to deliver
	more user friendly output of test results.  The program uses a
	preset list of tests to execute, primarily those that test for
	success of functionality rather than those that intentionally
	attempt to force a failure of functionality.

	The program has the capability to differentiate between tests
	that require TPM ownership (DEPENDENT), and those that don't
	(INDEPENDENT).  Therefore, a subset of tests can be performed
	on the TPM even if the tester does not want to take ownership
	of the TPM.

	Dependent tests require that the TPM is both activated and
	enabled in system BIOS.  Independent tests require the TPM to
	be activated, but not enabled.  Note that some system BIOS,
	particularly laptops and desktops, differentiate between
	"activated" and "enabled", while other BIOS such as Integrity
	do not.  For the purposes of this program, "activated" means
	the OS is aware of the TPM's existance (driver loaded and dmesg()
	shows a TPM entry), and the TPM can minimally run a self-test
	on itself.  The term "enabled" means the TPM is activated, and
	it can communicate with all levels of the TCG software stack
	as well as user applications.

        -co
		This option executes Tspi_TPM_ClearOwner01 which clears
		the ownership of the TPM.  No other tests are executed
		when using this option.  The shell environment variables
		TESTSUITE_OWNER_SECRET and TESTSUITE_SRK_SECRET must be
		exported to clear the TPM.  If ownership was installed
		via the tpmts test suite, these variables are set to
		the correct values automatically and manual exporting
		into the shell environment is not necessary.

        -ct
		Do not clear ownership of the TPM after tests have been
		completed.

		Normally, a full test run includes the testsuite taking
		ownership of the TPM to ensure that tests requiring TPM
		ownership (see -D flag) will complete successfully.  When
		the test run is finished, whether successful or not, the
		testsuite automatically clears the TPM as a last step in
		the test execution.  Clearing the TPM requires rebooting
		the system and enabling the TPM in the system BIOS before
		utilizing the TPM again for subsequent operations.

		If the tester does not want the TPM to be cleared as part
		of the normal testing procedure, use this option to retain
		TPM ownership.
		

        -D
		Run only tests that require TPM ownership and an SRK
		password (DEPENDENT tests).  Combine this option with the
		-id option to identify which tests require TPM ownership.

		Example: -D -id

        -id
		Do not run any tests, but identify which tests would
		normally be run.  Each test will identify itself and the
		order displayed, is the order that the tests will be
		executed.

		This option must be last on the command line when combined
		with other options.

        -I
		Run only tests that do not require TPM ownership or an
		SRK password (INDEPENDENT tests).  Combine this option
		with the -id option to identify which tests do not
		require TPM ownership.

		Example: -I -id

        -m
		Identify the hardware manufacturer of the TPM.  No other
		tests are executed.

        -o
		Show status of TPM ownership.  This option provides a
		quick method of determining if the TPM is currently
		under ownership.

	-p
		Provide the path to the trousers TSS testsuite "tcg"
		directory. This is a required command line option.

		NOTE:
		This program requires the TSS testsuite as provided via
		cvs at http://trousers.cvs.sourceforge.net/trousers/

        -t <n,n,n>
		Run user defined specific tests instead of the default
		set of tests.  Normally, the program will run all tests
		that it it is pre-configured to run.

		The user can override this functionality by supplying
		a comma separated list of test numbers to execute.

		Example: -t 4,8,9,30 will run test4, test8, test9 and
			 test30

		TIP:
		Use the -id option to determine which test corresponds
		to specific TCG Software Stack (TSS) commands.

        -u
		Show an abbreviated usage message that describes how to
		to use this program.

        -v <version>
		Define the TSS version to test.  The default TSS version
		is 1.2.

ENVIRONMENT
	The following environment variables can be used to manipulate
	program execution and/or act as a replacement for various
	command line options.

	CTFLAG
		This variable can be used as an alternative to the
		-ct option, to ensure that the TPM is not cleared
		after the tests have completed execution.

		Example: export CTFLAG=1

	TESTORDER
		This variable can be used to override the default
		set of tests normally executed by the program.  The
		format is a space separated list of test numbers
		that can be obtained by using the -id option to
		identify specific trousers TSS tests.

		Example: export TESTORDER="2 3 4 8 20"

		NOTE: The -t command line option has precedence over
		this enviroment variable.

	TESTPATH
		This variable can be used as an alternative to the
		-p option, to define the location of the "tcg"
		directory of the trousers TSS testsuite.

		Example: export TESTPATH="/trousers/testsuite/tcg"

		NOTE: The -p command line option has precedence over
		this environment variable.

	TESTSUITE_OWNER_SECRET
		This variable defines the password for TPM ownership.
		All tests that require TPM ownership (see -D option)
		also require this variable in the environment.  By
		default, the program automatically sets and exports
		this variable for testing purposes by TPM's that do
		not have an owner installed.

		TPM's that have had an owner installed external to
		this probram, must set and export this environment
		variable to use tests that require TPM ownership
		(see -D option).

	TESTSUITE_SRK_SECRET
		This variable defines the password for the Storage
		Root Key (SRK).  All tests that require an SRK 
		(see -D option) also require this variable in the
		environment.  By default, the program automatically
		sets and exports this variable for testing purposes
		by TPM's that do not have an owner installed.

		TPM's that have had an SRK defined external to
		this probram, must set and export this environment
		variable to use tests that require an SRK (see
		-D option).

	VERSION
		This variable can be used as an alternative to the
		-v option, to define the TPM version to test.

		Example: export VERSION="1.2"

		NOTE: The -v command line option has precedence over
		this environment variable.

NOTES
	If TESTSUITE_OWNER_SECRET is set as an environment variable,
	the TPM will not be cleared when tests are finished executing.
	This allows tests to be performed on TPM's that have an owner
	which was set external to this program, without risking an
	accidental clearing of that TPM.

	The -ct command line option always takes precedence over all
	other.  Setting -ct on the command line guarantees the TPM
	will not be cleared.



